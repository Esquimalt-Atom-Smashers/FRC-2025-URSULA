// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./wpilibNewCommands/generate_hids.py. DO NOT MODIFY

package edu.wpi.first.wpilibj;

import edu.wpi.first.wpilibj.event.EventLoop;
import edu.wpi.first.wpilibj2.command.CommandScheduler;

/**
 * A version of {@link CustomController} with {@link Trigger} factories for command-based.
 * 
 * File based on "CommandXboxController" class provided in the WPILib
 *
 * @see CustomController
 */
@SuppressWarnings("MethodName")
public class CommandCustomController extends CommandGenericHID {
  private final CustomController m_hid;

  /**
   * Construct an instance of a controller.
   *
   * @param port The port index on the Driver Station that the controller is plugged into.
   */
  public CommandCustomController(int port) {
    super(port);
    m_hid = new CustomController(port);
  }

  /**
   * Get the underlying GenericHID object.
   *
   * @return the wrapped GenericHID object
   */
  @Override
  public CustomController getHID() {
    return m_hid;
  }

  /**
   * Constructs a Trigger instance around the 0 button's digital signal.
   *
   * @return a Trigger instance representing the 0 button's digital signal attached
   *     to the {@link CommandScheduler#getDefaultButtonLoop() default scheduler button loop}.
   * @see #0(EventLoop)
   */
  public Trigger trigger0() {
    return trigger0(CommandScheduler.getInstance().getDefaultButtonLoop());
  }

  /**
   * Constructs a Trigger instance around the 0 button's digital signal.
   *
   * @param loop the event loop instance to attach the event to.
   * @return a Trigger instance representing the 0 button's digital signal attached
   *     to the given loop.
   */
  public Trigger trigger0(EventLoop loop) {
    return button(CustomController.Button.k0.value, loop);
  }
}
